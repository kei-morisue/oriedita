name: Release Jar and exe

on:
  push:
    tags:
      - "v*.*.*"
jobs:
  create_jar:
    runs-on: ubuntu-latest
    name: Create Executable Jar

    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'adopt'
          cache: maven

      - name: Cache Maven packages
        uses: actions/cache@v2
        with:
          path: ~/.m2
          key: ${{ runner.os }}-java17-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-java11-m2

      - id: get_version
        uses: battila7/get-version-action@v2

      - name: Set the version
        run: mvn -B versions:set -DnewVersion="${{ steps.get_version.outputs.version-without-v }}" --file pom.xml

      - name: Build with Maven
        run: mvn -B package --file pom.xml

      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          files: oriedita/target/oriedita-*.jar

  create_executable_windows:
    runs-on: windows-latest
    name: Create Executable (Windows)

    defaults:
      run:
        shell: pwsh

    steps:
      - uses: actions/checkout@v2

      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'adopt'
          cache: maven

      - name: Cache Maven packages
        uses: actions/cache@v2
        with:
          path: ~/.m2
          key: ${{ runner.os }}-java17-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-java17-m2

      - id: get_version
        uses: battila7/get-version-action@v2

      - name: Set the version
        run: mvn -B versions:set -DnewVersion="${{ steps.get_version.outputs.version-without-v }}" --file pom.xml

      - name: Build project and prepare JRE
        run: |
          mvn -B clean package --file pom.xml
          mkdir lib
          mkdir ci-build
          mkdir ci-build/portable
          cp oriedita/target/oriedita-${{ steps.get_version.outputs.version-without-v }}.jar lib/
          $deps = jdeps --print-module-deps --ignore-missing-deps lib/oriedita-${{ steps.get_version.outputs.version-without-v }}.jar
          jlink --add-modules $deps --output ci-build/oriedita-runtime --strip-debug --strip-native-commands --no-header-files --no-man-pages --compress=2

      - name: Create portable executable (Windows)
        run: |
          jpackage `
            @build/jpackage-common.txt `
            @build/jpackage-common-win.txt `
            --dest ci-build/portable `
            --type app-image `
            --name "Oriedita" `
            --app-version ${{ steps.get_version.outputs.major }}.${{ steps.get_version.outputs.minor }}.${{ steps.get_version.outputs.patch }} `
            --main-jar oriedita-${{ steps.get_version.outputs.version-without-v }}.jar `

      - name: Create zip for portable executable (Windows)
        uses: papeloto/action-zip@v1
        with:
          files: 'ci-build/portable'
          dest: ci-build/Oriedita Portable (Windows) ${{ steps.get_version.outputs.version-without-v }}.zip

      - name: Create installer (Windows)
        run: |
          jpackage `
            @build/jpackage-common.txt `
            @build/jpackage-common-win.txt `
            @build/jpackage-installer.txt `
            @build/jpackage-installer-win.txt `
            --name "Oriedita" `
            --app-version ${{ steps.get_version.outputs.major }}.${{ steps.get_version.outputs.minor }}.${{ steps.get_version.outputs.patch }} `
            --main-jar oriedita-${{ steps.get_version.outputs.version-without-v }}.jar `

      - name: Fix installer version
        run: |
          mv ci-build/Oriedita-${{ steps.get_version.outputs.major }}.${{ steps.get_version.outputs.minor }}.${{ steps.get_version.outputs.patch }}.exe ci-build/Oriedita-${{ steps.get_version.outputs.version-without-v }}.exe

      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            ci-build/Oriedita*.exe
            ci-build/Oriedita*.zip

  create_executable_linux:
    name: Create Executable (Linux)
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: pwsh

    steps:
      - uses: actions/checkout@v2

      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'adopt'
          cache: maven
      - name: Cache Maven packages
        uses: actions/cache@v2
        with:
          path: ~/.m2
          key: ${{ runner.os }}-java17-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-java17-m2

      - id: get_version
        uses: battila7/get-version-action@v2

      - name: Set the version
        run: mvn -B versions:set -DnewVersion="${{ steps.get_version.outputs.version-without-v }}" --file pom.xml

      - name: Build project and prepare JRE
        run: |
          mvn -B clean package --file pom.xml
          mkdir lib
          mkdir ci-build
          mkdir ci-build/portable
          cp oriedita/target/oriedita-${{ steps.get_version.outputs.version-without-v }}.jar lib/
          $deps = jdeps --print-module-deps --ignore-missing-deps lib/oriedita-${{ steps.get_version.outputs.version-without-v }}.jar
          jlink --add-modules $deps --output ci-build/oriedita-runtime --strip-debug --strip-native-commands --no-header-files --no-man-pages --compress=2

      - name: Create portable executable (Linux)
        run: |
          jpackage `
            @build/jpackage-common.txt `
            @build/jpackage-common-linux.txt `
            --dest ci-build/portable `
            --type app-image `
            --name "Oriedita" `
            --app-version ${{ steps.get_version.outputs.major }}.${{ steps.get_version.outputs.minor }}.${{ steps.get_version.outputs.patch }} `
            --main-jar oriedita-${{ steps.get_version.outputs.version-without-v }}.jar `

      - name: Create zip for portable executable (Linux)
        uses: papeloto/action-zip@v1
        with:
          files: 'ci-build/portable'
          dest: ci-build/Oriedita Portable (Linux) ${{ steps.get_version.outputs.version-without-v }}.zip

      - name: Create DEB (Linux)
        run: |
          jpackage `
            @build/jpackage-common.txt `
            @build/jpackage-common-linux.txt `
            @build/jpackage-installer.txt `
            @build/jpackage-installer-linux.txt `
            --name "Oriedita" `
            --app-version ${{ steps.get_version.outputs.version-without-v }} `
            --main-jar oriedita-${{ steps.get_version.outputs.version-without-v }}.jar `

      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            ci-build/oriedita*.deb
            ci-build/Oriedita*.zip


  create_executable_macos:
    runs-on: macos-latest
    name: Create Executable (MacOs)

    defaults:
      run:
        shell: pwsh

    steps:
      - uses: actions/checkout@v2

      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'adopt'
          cache: maven

      - name: Cache Maven packages
        uses: actions/cache@v2
        with:
          path: ~/.m2
          key: ${{ runner.os }}-java17-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-java17-m2

      - id: get_version
        uses: battila7/get-version-action@v2

      - name: Set the version
        run: mvn -B versions:set -DnewVersion="${{ steps.get_version.outputs.version-without-v }}" --file pom.xml

      - name: Build project and prepare JRE
        run: |
          mvn -B clean package --file pom.xml
          mkdir lib
          mkdir ci-build
          mkdir ci-build/portable
          cp oriedita/target/oriedita-${{ steps.get_version.outputs.version-without-v }}.jar lib/
          $deps = jdeps --print-module-deps --ignore-missing-deps lib/oriedita-${{ steps.get_version.outputs.version-without-v }}.jar
          jlink --add-modules $deps --output ci-build/oriedita-runtime --strip-debug --strip-native-commands --no-header-files --no-man-pages --compress=2

      - name: Create portable executable (Mac)
        run: |
          jpackage `
            @build/jpackage-common.txt `
            @build/jpackage-common-mac.txt `
            --dest ci-build `
            --type app-image `
            --name "Oriedita" `
            --app-version ${{ steps.get_version.outputs.major }}.${{ steps.get_version.outputs.minor }}.${{ steps.get_version.outputs.patch }} `
            --main-jar oriedita-${{ steps.get_version.outputs.version-without-v }}.jar
          pushd ci-build
          zip -r "Oriedita Portable (Mac) ${{ steps.get_version.outputs.version-without-v }}.zip" Oriedita.app
          popd

      - name: Create DMG (Mac)
        run: |
          jpackage `
            @build/jpackage-common.txt `
            @build/jpackage-common-mac.txt `
            @build/jpackage-installer.txt `
            @build/jpackage-installer-mac.txt `
            --name "Oriedita" `
            --app-version ${{ steps.get_version.outputs.major }}.${{ steps.get_version.outputs.minor }}.${{ steps.get_version.outputs.patch }} `
            --main-jar oriedita-${{ steps.get_version.outputs.version-without-v }}.jar `

      - name: Fix dmg version
        run: |
          mv ci-build/Oriedita-${{ steps.get_version.outputs.major }}.${{ steps.get_version.outputs.minor }}.${{ steps.get_version.outputs.patch }}.dmg ci-build/Oriedita-${{ steps.get_version.outputs.version-without-v }}.dmg

      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            ci-build/Oriedita*.dmg
            ci-build/Oriedita*.zip
